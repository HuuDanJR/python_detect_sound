<%= form_with(model: notification, local: true) do |form| %>
  <div class="row">
    <% if notification.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(notification.errors.count, "error") %> prohibited this notification from being saved:</h2>

        <ul>
          <% notification.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  </div>

  <div class="row" data-turbolinks="false">
    <!-- left column -->
    <div class="col-md-12">
      <!-- general form elements -->
      <div class="card card-secondary">
        <div class="card-header">
          <h3 class="card-title">Information</h3>
        </div>
        <!-- /.card-header -->
        <div class="card-body">
          <div class="form-row form-group">
            <div class="col-md-6 form-group" id="" style="display: flow-root;">
              <label>
                <%= t('search_customer_number') %>:
              </label>
              <input id="search" autocomplete="off" onfocus="FocusSearch(this)" onkeyup="searchUsers(this)" 
                    onblur="UnFocusSearch(this)" class="search-input" placeholder="" style="border: 1px solid #ced4da;padding: 6px;">
              <div id="list-result"></div>

            </div>
            <div class="col-md-6">
              <label>
                <%= t('customer_number') %>:
              </label>
              <select class="form-control select2" multiple="multiple" name="notification_user_ids" id="notification_user_ids" onchange="onChangeIds()">
                  <option value="">-- Customer Number --</option>
              </select>
              <input type="text" hidden id="notification_ids" name="notification_ids">
            </div>
          </div>

          <div class="form-row">
            <div class="form-group col-sm-12">
              <label><%= t('title') %>:</label>
              <input type="text" class="form-control" id="message_title" name="message_title" required="required">
            </div>
          </div>

          <div class="form-row">
            <div class="form-group col-sm-12">
              <label><%= t('content') %>:</label>
              <%= form.text_area :content, class: "form-control ckeditor", rows:"6", required: true %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-12">
      <%= link_to 'Back', 'javascript:void(0);', onclick: "window.history.back(); setTimeout(function(){window.location.reload();}, 100);", class: "btn btn-secondary" %>      <%# <input class="btn btn-success float-right" name="btnSubmit" data-disable-with="Processing..." type="submit" value="Save" /> %>
      <%# <button type="submit" class="btn btn-success float-right" id="btnSubmit">Save</button> %>
    </div>
  </div>
<% end %>
<script>
    $(document).on("turbolinks:load", function () {
        replaceCKEDITOR("notification_content");
    });
</script>

<script>
  selected_customer = [];
  $( document ).ready(function() {

  });
  
    var _changeInterval = null;
    function searchUsers(othis){
        var keyword = $('#search').val();
        var search = $(othis).val();
        if(search != null && search != ''){
            clearInterval(_changeInterval);
            _changeInterval = setInterval(function() {
                clearInterval(_changeInterval);
                $("#list-result").empty();
                Search(keyword);
            }, 500);
        }else{
            $("#list-result").empty();
        }
    }

    function FocusSearch(othis){
        var search = $(othis).val();
        if(search == null || search == ''){
            $("#list-result").empty();
        }
    }
    function UnFocusSearch(othis){
        var search = $(othis).val();
        // $('#search').val('');
        // $("#list-result").empty();
    }

  function Search(keyword){
      $.ajax({
          "url": `/notifications/get_users?search=${keyword}`,
          "method": "GET",
          success: function (result) {
              if(result != null && result.length > 0){
                  var html = '';
                  $.each(result, function(index, item){
                      html += RenderHtmlItem(item);
                  })
                  $('#list-result').append(html);
              }else{
                $('#list-result').append('<div>Not Found</div>');
              }
          },
          error: function (result) {
            $('#list-result').append('<div>Not Found</div>');
          }
      })
  }

  function RenderHtmlItem(item){
    let name = (item.surname == null ? "" : item.surname) + " " + (item.middle_name == null ? "" : item.middle_name) + " " + (item.forename == null ? "" : item.forename);
    return `<div class="lc-item" onclick="selectCustomer(${item.user_id}, ${item.number}, '${name}')">
        <div class="lc-content">
            <div type="hidden" class="temp-object hide">${JSON.stringify(item)}</div>
            <div class="result-name">${item.number} - ${name}</div>
        </div>
    </div>`;
  }
  
  function selectCustomer(user_id, number, name){
    if(selected_customer.length > 0){
      let isExited = checkItemNotList(selected_customer, user_id.toString());
      if(!isExited){
        selected_customer.push(user_id.toString());
        $("#notification_user_ids").val();
        // console.log(JSON.stringify(selected_customer));
        $('#notification_user_ids').append(`<option value="${user_id}" selected>${number} - ${name}</option>`);
        // $("#notification_user_ids").val(JSON.stringify(selected_customer));
        $('#notification_user_ids').trigger('change');
        $('#notification_ids').val(selected_customer);
      }
    }else{
      selected_customer.push(user_id.toString());
      $("#notification_user_ids").val();
      // console.log(JSON.stringify(selected_customer));
      $('#notification_user_ids').append(`<option value="${user_id}" selected>${number} - ${name}</option>`);
      // $("#notification_user_ids").val(JSON.stringify(selected_customer));
      $('#notification_user_ids').trigger('change');
      $('#notification_ids').val(selected_customer);
    }
  }

  function checkItemNotList(listUsers, number){
    return listUsers.includes(number);
  }

  function onChangeIds(){
    let userids = $("#notification_user_ids").val();
    let selected_customer_tmp = selected_customer;
    if (userids.length < selected_customer_tmp.length){
      selected_customer_tmp.forEach(element => {
          let isExited = checkItemNotList(userids, element);
          if(!isExited){
            const index = selected_customer.indexOf(element);
            if (index > -1) {
              selected_customer.splice(index, 1);
            }
          }
      });
    }else if(userids.length > selected_customer_tmp.length){
      userids.forEach(element => {
          let isExited = checkItemNotList(selected_customer_tmp, element);
          if(!isExited){
            selected_customer.push(element);
          }
      });
    }
    
    $('#notification_ids').val(selected_customer);
  }

  
</script>